# ~/.config/starship.toml
# BU IST Optimized Starship Configuration
# Optimized for PHP, JavaScript, and Python development with server management

# ============================================================================
# GENERAL SETTINGS
# ============================================================================

# Add a blank line between shell prompts for better readability
add_newline = true

# Timeout for command execution (2 seconds)
command_timeout = 2000

# Optimized format - shows only relevant information
format = """
$username\
$hostname\
$directory\
$git_branch\
$git_status\
$php\
$nodejs\
$python\
$docker_context\
$aws\
$kubernetes\
$cmd_duration\
$line_break\
$character"""

# ============================================================================
# PROMPT CHARACTER
# ============================================================================

[character]
success_symbol = "[➤](bold green)"
error_symbol = "[➤](bold red)"
vimcmd_symbol = "[❮](bold green)"

# ============================================================================
# DIRECTORY
# ============================================================================

[directory]
truncation_length = 3
truncate_to_repo = false
style = "bold blue"
format = "[$path]($style)[$read_only]($read_only_style) "
read_only = "🔒"
read_only_style = "red"

# Substitute long paths for better readability
[directory.substitutions]
"Documents" = "📄"
"Downloads" = "📥"
"Music" = "🎵"
"Pictures" = "📷"
"Projects" = "💼"
"Code" = "💻"
"repos" = "📁"

# ============================================================================
# GIT - OPTIMIZED FOR PERFORMANCE
# ============================================================================

[git_branch]
symbol = "🌱 "
format = "on [$symbol$branch]($style) "
style = "bold purple"
truncation_length = 20
truncation_symbol = "…"

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
style = "bold red"
conflicted = "⚡"
ahead = "⇡${count}"
behind = "⇣${count}"
diverged = "⇕⇡${ahead_count}⇣${behind_count}"
up_to_date = ""
untracked = "?${count}"
stashed = "📦"
modified = "!${count}"
staged = "+${count}"
renamed = "»${count}"
deleted = "✘${count}"
# Performance optimization for large repos
ignore_submodules = true

# ============================================================================
# LANGUAGES & TOOLS (OPTIMIZED FOR BU IST STACK)
# ============================================================================

[nodejs]
format = "via [⬢ $version](bold green) "
detect_extensions = ["js", "mjs", "cjs", "ts", "json"]
detect_files = ["package.json", ".nvmrc", "node_modules"]
version_format = "v${major}.${minor}.${patch}"

[php]
format = "via [🐘 $version](147 bold) "
detect_extensions = ["php"]
detect_files = ["composer.json", ".php-version", "artisan", "wp-config.php"]
version_format = "v${major}.${minor}.${patch}"

[python]
format = 'via [🐍 $version]($style) '
style = "yellow bold"
detect_extensions = ["py"]
detect_files = ["requirements.txt", ".python-version", "pyproject.toml", "Pipfile", "manage.py"]
version_format = "v${major}.${minor}.${patch}"

[docker_context]
format = "via [🐳 $context](blue bold) "
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]

# ============================================================================
# CLOUD & INFRASTRUCTURE
# ============================================================================

[aws]
format = 'on [☁️ ($profile )(\($region\) )]($style)'
style = "bold blue"
symbol = "☁️ "
# Only show when working with AWS files or when profile is explicitly set
detect_files = [
    'serverless.yml',
    'cloudformation.yml',
    '.aws-sam',
    'terraform.tf',
    'main.tf',
    'cdk.json'
]

[kubernetes]
format = 'on [⛵ ($user on )($cluster in )$context \($namespace\)](dimmed green) '
disabled = false
detect_files = ['k8s', 'kubernetes', 'kustomization.yaml']

# ============================================================================
# SYSTEM INFO (MINIMAL)
# ============================================================================

[username]
format = "[$user]($style)@"
style_user = "bold yellow"
style_root = "bold red"
show_always = false

[hostname]
ssh_only = true
format = "[$hostname]($style) in "
style = "bold green"

[cmd_duration]
min_time = 1_000  # Show duration for commands taking >1 second
format = "took [$duration]($style) "
style = "yellow bold"
show_milliseconds = false

# ============================================================================
# DISABLE UNUSED MODULES FOR PERFORMANCE
# ============================================================================

[package]
disabled = true

[memory_usage]
disabled = true

[time]
disabled = true

[battery]
disabled = true

[env_var]
disabled = true

# Languages not commonly used in BU IST projects
[crystal]
disabled = true

[dart]
disabled = true

[deno]
disabled = true

[dotnet]
disabled = true

[elixir]
disabled = true

[elm]
disabled = true

[erlang]
disabled = true

[golang]
disabled = true

[haskell]
disabled = true

[java]
disabled = true

[julia]
disabled = true

[kotlin]
disabled = true

[lua]
disabled = true

[nim]
disabled = true

[nix_shell]
disabled = true

[ocaml]
disabled = true

[perl]
disabled = true

[red]
disabled = true

[ruby]
disabled = true

[rust]
disabled = true

[scala]
disabled = true

[swift]
disabled = true

[terraform]
disabled = false  # Keep enabled as we may use Terraform

[vlang]
disabled = true

[zig]
disabled = true

[bun]
disabled = true